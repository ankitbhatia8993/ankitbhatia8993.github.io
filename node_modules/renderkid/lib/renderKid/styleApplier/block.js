// Generated by CoffeeScript 1.9.3
<<<<<<< HEAD
var _common, blockStyleApplier, object, self;

_common = require('./_common');

object = require('utila').object;
=======
var _common, blockStyleApplier, merge, self;

_common = require('./_common');

merge = require('lodash/merge');
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3

module.exports = blockStyleApplier = self = {
  applyTo: function(el, style) {
    var config, ret;
    ret = _common.getStyleTagsFor(style);
    ret.blockConfig = config = {};
    this._margins(style, config);
    this._bullet(style, config);
    this._dims(style, config);
    return ret;
  },
  _margins: function(style, config) {
    if (style.marginLeft != null) {
<<<<<<< HEAD
      object.appendOnto(config, {
=======
      merge(config, {
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
        linePrependor: {
          options: {
            amount: parseInt(style.marginLeft)
          }
        }
      });
    }
    if (style.marginRight != null) {
<<<<<<< HEAD
      object.appendOnto(config, {
=======
      merge(config, {
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
        lineAppendor: {
          options: {
            amount: parseInt(style.marginRight)
          }
        }
      });
    }
    if (style.marginTop != null) {
<<<<<<< HEAD
      object.appendOnto(config, {
=======
      merge(config, {
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
        blockPrependor: {
          options: {
            amount: parseInt(style.marginTop)
          }
        }
      });
    }
    if (style.marginBottom != null) {
<<<<<<< HEAD
      object.appendOnto(config, {
=======
      merge(config, {
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
        blockAppendor: {
          options: {
            amount: parseInt(style.marginBottom)
          }
        }
      });
    }
  },
  _bullet: function(style, config) {
    var after, before, bullet, conf, ref;
    if ((style.bullet != null) && style.bullet.enabled) {
      bullet = style.bullet;
      conf = {};
      conf.alignment = style.bullet.alignment;
      ref = _common.getStyleTagsFor({
        color: bullet.color,
        background: bullet.background
      }), before = ref.before, after = ref.after;
      conf.char = before + bullet.char + after;
<<<<<<< HEAD
      object.appendOnto(config, {
=======
      merge(config, {
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
        linePrependor: {
          options: {
            bullet: conf
          }
        }
      });
    }
  },
  _dims: function(style, config) {
    var w;
    if (style.width != null) {
      w = parseInt(style.width);
      config.width = w;
    }
  }
};
