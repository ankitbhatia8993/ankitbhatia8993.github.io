var anObject = require('../internals/an-object');
<<<<<<< HEAD
=======
var iteratorClose = require('../internals/iterator-close');
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
<<<<<<< HEAD
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
=======
    iteratorClose(iterator);
>>>>>>> dea1f40603bd8c2fd2deb4cd684cf871afc501c3
    throw error;
  }
};
